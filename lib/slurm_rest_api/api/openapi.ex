# NOTE: This file is auto generated by OpenAPI Generator 6.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule SlurmRestAPI.Api.Openapi do
  @moduledoc """
  API calls for all endpoints tagged `Openapi`.
  """

  alias SlurmRestAPI.Connection
  import SlurmRestAPI.RequestBuilder

  @doc """
  Retrieve OpenAPI Specification

  ### Parameters

  - `connection` (SlurmRestAPI.Connection): Connection to server
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec openapi_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def openapi_get(connection, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/openapi")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve OpenAPI Specification

  ### Parameters

  - `connection` (SlurmRestAPI.Connection): Connection to server
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec openapi_json_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def openapi_json_get(connection, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/openapi.json")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve OpenAPI Specification

  ### Parameters

  - `connection` (SlurmRestAPI.Connection): Connection to server
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec openapi_v3_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def openapi_v3_get(connection, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/openapi/v3")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve OpenAPI Specification

  ### Parameters

  - `connection` (SlurmRestAPI.Connection): Connection to server
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec openapi_yaml_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def openapi_yaml_get(connection, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/openapi.yaml")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end
end
