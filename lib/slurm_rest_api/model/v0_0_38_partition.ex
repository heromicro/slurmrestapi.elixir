# NOTE: This file is auto generated by OpenAPI Generator 6.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule SlurmRestAPI.Model.V0038Partition do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :flags,
    :preemption_mode,
    :allowed_allocation_nodes,
    :allowed_accounts,
    :allowed_groups,
    :allowed_qos,
    :alternative,
    :billing_weights,
    :default_memory_per_cpu,
    :default_time_limit,
    :denied_accounts,
    :denied_qos,
    :preemption_grace_time,
    :maximum_cpus_per_node,
    :maximum_memory_per_node,
    :maximum_nodes_per_job,
    :max_time_limit,
    :min_nodes_per_job,
    :name,
    :nodes,
    :over_time_limit,
    :priority_job_factor,
    :priority_tier,
    :qos,
    :state,
    :total_cpus,
    :total_nodes,
    :tres,
    :maximum_memory_per_cpu,
    :default_memory_per_node
  ]

  @type t :: %__MODULE__{
    :flags => [String.t] | nil,
    :preemption_mode => [String.t] | nil,
    :allowed_allocation_nodes => String.t | nil,
    :allowed_accounts => String.t | nil,
    :allowed_groups => String.t | nil,
    :allowed_qos => String.t | nil,
    :alternative => String.t | nil,
    :billing_weights => String.t | nil,
    :default_memory_per_cpu => integer() | nil,
    :default_time_limit => integer() | nil,
    :denied_accounts => String.t | nil,
    :denied_qos => String.t | nil,
    :preemption_grace_time => integer() | nil,
    :maximum_cpus_per_node => integer() | nil,
    :maximum_memory_per_node => integer() | nil,
    :maximum_nodes_per_job => integer() | nil,
    :max_time_limit => integer() | nil,
    :min_nodes_per_job => integer() | nil,
    :name => String.t | nil,
    :nodes => String.t | nil,
    :over_time_limit => integer() | nil,
    :priority_job_factor => integer() | nil,
    :priority_tier => integer() | nil,
    :qos => String.t | nil,
    :state => String.t | nil,
    :total_cpus => integer() | nil,
    :total_nodes => integer() | nil,
    :tres => String.t | nil,
    :maximum_memory_per_cpu => integer() | nil,
    :default_memory_per_node => integer() | nil
  }
end

defimpl Poison.Decoder, for: SlurmRestAPI.Model.V0038Partition do
  def decode(value, _options) do
    value
  end
end

