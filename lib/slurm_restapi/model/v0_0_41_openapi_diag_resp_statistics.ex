# NOTE: This file is auto generated by OpenAPI Generator 7.10.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule SlurmRESTAPI.Model.V0041OpenapiDiagRespStatistics do
  @moduledoc """
  statistics
  """

  @derive Jason.Encoder
  defstruct [
    :parts_packed,
    :req_time,
    :req_time_start,
    :server_thread_count,
    :agent_queue_size,
    :agent_count,
    :agent_thread_count,
    :dbd_agent_queue_size,
    :gettimeofday_latency,
    :schedule_cycle_max,
    :schedule_cycle_last,
    :schedule_cycle_sum,
    :schedule_cycle_total,
    :schedule_cycle_mean,
    :schedule_cycle_mean_depth,
    :schedule_cycle_per_minute,
    :schedule_cycle_depth,
    :schedule_exit,
    :schedule_queue_length,
    :jobs_submitted,
    :jobs_started,
    :jobs_completed,
    :jobs_canceled,
    :jobs_failed,
    :jobs_pending,
    :jobs_running,
    :job_states_ts,
    :bf_backfilled_jobs,
    :bf_last_backfilled_jobs,
    :bf_backfilled_het_jobs,
    :bf_cycle_counter,
    :bf_cycle_mean,
    :bf_depth_mean,
    :bf_depth_mean_try,
    :bf_cycle_sum,
    :bf_cycle_last,
    :bf_cycle_max,
    :bf_exit,
    :bf_last_depth,
    :bf_last_depth_try,
    :bf_depth_sum,
    :bf_depth_try_sum,
    :bf_queue_len,
    :bf_queue_len_mean,
    :bf_queue_len_sum,
    :bf_table_size,
    :bf_table_size_sum,
    :bf_table_size_mean,
    :bf_when_last_cycle,
    :bf_active,
    :rpcs_by_message_type,
    :rpcs_by_user,
    :pending_rpcs,
    :pending_rpcs_by_hostlist
  ]

  @type t :: %__MODULE__{
    :parts_packed => integer() | nil,
    :req_time => SlurmRESTAPI.Model.V0041OpenapiDiagRespStatisticsReqTime.t | nil,
    :req_time_start => SlurmRESTAPI.Model.V0041OpenapiDiagRespStatisticsReqTimeStart.t | nil,
    :server_thread_count => integer() | nil,
    :agent_queue_size => integer() | nil,
    :agent_count => integer() | nil,
    :agent_thread_count => integer() | nil,
    :dbd_agent_queue_size => integer() | nil,
    :gettimeofday_latency => integer() | nil,
    :schedule_cycle_max => integer() | nil,
    :schedule_cycle_last => integer() | nil,
    :schedule_cycle_sum => integer() | nil,
    :schedule_cycle_total => integer() | nil,
    :schedule_cycle_mean => integer() | nil,
    :schedule_cycle_mean_depth => integer() | nil,
    :schedule_cycle_per_minute => integer() | nil,
    :schedule_cycle_depth => integer() | nil,
    :schedule_exit => SlurmRESTAPI.Model.V0041OpenapiDiagRespStatisticsScheduleExit.t | nil,
    :schedule_queue_length => integer() | nil,
    :jobs_submitted => integer() | nil,
    :jobs_started => integer() | nil,
    :jobs_completed => integer() | nil,
    :jobs_canceled => integer() | nil,
    :jobs_failed => integer() | nil,
    :jobs_pending => integer() | nil,
    :jobs_running => integer() | nil,
    :job_states_ts => SlurmRESTAPI.Model.V0041OpenapiDiagRespStatisticsJobStatesTs.t | nil,
    :bf_backfilled_jobs => integer() | nil,
    :bf_last_backfilled_jobs => integer() | nil,
    :bf_backfilled_het_jobs => integer() | nil,
    :bf_cycle_counter => integer() | nil,
    :bf_cycle_mean => integer() | nil,
    :bf_depth_mean => integer() | nil,
    :bf_depth_mean_try => integer() | nil,
    :bf_cycle_sum => integer() | nil,
    :bf_cycle_last => integer() | nil,
    :bf_cycle_max => integer() | nil,
    :bf_exit => SlurmRESTAPI.Model.V0041OpenapiDiagRespStatisticsBfExit.t | nil,
    :bf_last_depth => integer() | nil,
    :bf_last_depth_try => integer() | nil,
    :bf_depth_sum => integer() | nil,
    :bf_depth_try_sum => integer() | nil,
    :bf_queue_len => integer() | nil,
    :bf_queue_len_mean => integer() | nil,
    :bf_queue_len_sum => integer() | nil,
    :bf_table_size => integer() | nil,
    :bf_table_size_sum => integer() | nil,
    :bf_table_size_mean => integer() | nil,
    :bf_when_last_cycle => SlurmRESTAPI.Model.V0041OpenapiDiagRespStatisticsBfWhenLastCycle.t | nil,
    :bf_active => boolean() | nil,
    :rpcs_by_message_type => [SlurmRESTAPI.Model.V0041OpenapiDiagRespStatisticsRpcsByMessageTypeInner.t] | nil,
    :rpcs_by_user => [SlurmRESTAPI.Model.V0041OpenapiDiagRespStatisticsRpcsByUserInner.t] | nil,
    :pending_rpcs => [SlurmRESTAPI.Model.V0041OpenapiDiagRespStatisticsPendingRpcsInner.t] | nil,
    :pending_rpcs_by_hostlist => [SlurmRESTAPI.Model.V0041OpenapiDiagRespStatisticsPendingRpcsByHostlistInner.t] | nil
  }

  alias SlurmRESTAPI.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:req_time, :struct, SlurmRESTAPI.Model.V0041OpenapiDiagRespStatisticsReqTime)
     |> Deserializer.deserialize(:req_time_start, :struct, SlurmRESTAPI.Model.V0041OpenapiDiagRespStatisticsReqTimeStart)
     |> Deserializer.deserialize(:schedule_exit, :struct, SlurmRESTAPI.Model.V0041OpenapiDiagRespStatisticsScheduleExit)
     |> Deserializer.deserialize(:job_states_ts, :struct, SlurmRESTAPI.Model.V0041OpenapiDiagRespStatisticsJobStatesTs)
     |> Deserializer.deserialize(:bf_exit, :struct, SlurmRESTAPI.Model.V0041OpenapiDiagRespStatisticsBfExit)
     |> Deserializer.deserialize(:bf_when_last_cycle, :struct, SlurmRESTAPI.Model.V0041OpenapiDiagRespStatisticsBfWhenLastCycle)
     |> Deserializer.deserialize(:rpcs_by_message_type, :list, SlurmRESTAPI.Model.V0041OpenapiDiagRespStatisticsRpcsByMessageTypeInner)
     |> Deserializer.deserialize(:rpcs_by_user, :list, SlurmRESTAPI.Model.V0041OpenapiDiagRespStatisticsRpcsByUserInner)
     |> Deserializer.deserialize(:pending_rpcs, :list, SlurmRESTAPI.Model.V0041OpenapiDiagRespStatisticsPendingRpcsInner)
     |> Deserializer.deserialize(:pending_rpcs_by_hostlist, :list, SlurmRESTAPI.Model.V0041OpenapiDiagRespStatisticsPendingRpcsByHostlistInner)
  end
end

