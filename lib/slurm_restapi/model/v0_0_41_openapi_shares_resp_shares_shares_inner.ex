# NOTE: This file is auto generated by OpenAPI Generator 7.10.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule SlurmRESTAPI.Model.V0041OpenapiSharesRespSharesSharesInner do
  @moduledoc """
  
  """

  @derive Jason.Encoder
  defstruct [
    :id,
    :cluster,
    :name,
    :parent,
    :partition,
    :shares_normalized,
    :shares,
    :tres,
    :effective_usage,
    :usage_normalized,
    :usage,
    :fairshare,
    :type
  ]

  @type t :: %__MODULE__{
    :id => integer() | nil,
    :cluster => String.t | nil,
    :name => String.t | nil,
    :parent => String.t | nil,
    :partition => String.t | nil,
    :shares_normalized => SlurmRESTAPI.Model.V0041OpenapiSharesRespSharesSharesInnerSharesNormalized.t | nil,
    :shares => SlurmRESTAPI.Model.V0041OpenapiSharesRespSharesSharesInnerShares.t | nil,
    :tres => SlurmRESTAPI.Model.V0041OpenapiSharesRespSharesSharesInnerTres.t | nil,
    :effective_usage => float() | nil,
    :usage_normalized => SlurmRESTAPI.Model.V0041OpenapiSharesRespSharesSharesInnerUsageNormalized.t | nil,
    :usage => integer() | nil,
    :fairshare => SlurmRESTAPI.Model.V0040AssocSharesObjWrapFairshare.t | nil,
    :type => [String.t] | nil
  }

  alias SlurmRESTAPI.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:shares_normalized, :struct, SlurmRESTAPI.Model.V0041OpenapiSharesRespSharesSharesInnerSharesNormalized)
     |> Deserializer.deserialize(:shares, :struct, SlurmRESTAPI.Model.V0041OpenapiSharesRespSharesSharesInnerShares)
     |> Deserializer.deserialize(:tres, :struct, SlurmRESTAPI.Model.V0041OpenapiSharesRespSharesSharesInnerTres)
     |> Deserializer.deserialize(:usage_normalized, :struct, SlurmRESTAPI.Model.V0041OpenapiSharesRespSharesSharesInnerUsageNormalized)
     |> Deserializer.deserialize(:fairshare, :struct, SlurmRESTAPI.Model.V0040AssocSharesObjWrapFairshare)
  end
end

